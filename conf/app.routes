# microservice specific routes

GET        /assets/*file        controllers.Assets.at(path="/public", file)

GET        /                    @uk.gov.hmrc.bindingtariffadminfrontend.controllers.IndexController.get

GET        /case-migration      @uk.gov.hmrc.bindingtariffadminfrontend.controllers.CaseMigrationUploadController.get
POST       /case-migration      @uk.gov.hmrc.bindingtariffadminfrontend.controllers.CaseMigrationUploadController.post
GET        /file-migration      @uk.gov.hmrc.bindingtariffadminfrontend.controllers.FileMigrationUploadController.get
POST       /file-migration      @uk.gov.hmrc.bindingtariffadminfrontend.controllers.FileMigrationUploadController.post

GET        /monitor             @uk.gov.hmrc.bindingtariffadminfrontend.controllers.MonitorController.get()
GET        /search              @uk.gov.hmrc.bindingtariffadminfrontend.controllers.SearchController.get(search: uk.gov.hmrc.bindingtariffadminfrontend.model.classification.CaseSearch ?= uk.gov.hmrc.bindingtariffadminfrontend.model.classification.CaseSearch(), pagination: uk.gov.hmrc.bindingtariffadminfrontend.model.Pagination ?= uk.gov.hmrc.bindingtariffadminfrontend.model.Pagination())

GET        /state               @uk.gov.hmrc.bindingtariffadminfrontend.controllers.DataMigrationStateController.get(page: Int ?= 1, status: Seq[String] ?= Seq.empty)
POST       /state               @uk.gov.hmrc.bindingtariffadminfrontend.controllers.DataMigrationStateController.delete(status: Option[String])

GET        /reset               @uk.gov.hmrc.bindingtariffadminfrontend.controllers.DataMigrationStateController.reset()
POST       /reset               @uk.gov.hmrc.bindingtariffadminfrontend.controllers.DataMigrationStateController.resetConfirm()
